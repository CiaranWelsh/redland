<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" 
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="rasqal-section-variable">
<refmeta>
<refentrytitle role="top_of_page" id="rasqal-section-variable.top_of_page">section-variable</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>RASQAL Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>section-variable</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsect1 id="rasqal-section-variable.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="rasqal-variable"><returnvalue>rasqal_variable</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="rasqal-new-variable-from-variable">rasqal_new_variable_from_variable</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="rasqal-free-variable">rasqal_free_variable</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="rasqal-variable-print">rasqal_variable_print</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="rasqal-variable-set-value">rasqal_variable_set_value</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="rasqal-section-variable.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="rasqal-variable">rasqal_variable</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="rasqal-variable-type">rasqal_variable_type</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="rasqal-section-variable.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="rasqal-section-variable.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="rasqal-new-variable-from-variable" role="function">
<title>rasqal_new_variable_from_variable&#160;()</title>
<indexterm zone="rasqal-new-variable-from-variable"><primary>rasqal_new_variable_from_variable</primary></indexterm>
<programlisting language="C"><link linkend="rasqal-variable"><returnvalue>rasqal_variable</returnvalue></link>&#160;*
rasqal_new_variable_from_variable (<parameter><link linkend="rasqal-variable"><type>rasqal_variable</type></link> *v</parameter>);</programlisting>
<para>Copy Constructor - Create a new Rasqal variable from an existing one</para>
<para>This adds a new reference to the variable, it does not do a deep copy</para>
<refsect3 id="rasqal-new-variable-from-variable.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>v</para></entry>
<entry role="parameter_description"><para><link linkend="rasqal-variable"><type>rasqal_variable</type></link> to copy</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="rasqal-new-variable-from-variable.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="rasqal-variable"><type>rasqal_variable</type></link> or NULL on failure.</para>
</refsect3></refsect2>
<refsect2 id="rasqal-free-variable" role="function">
<title>rasqal_free_variable&#160;()</title>
<indexterm zone="rasqal-free-variable"><primary>rasqal_free_variable</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
rasqal_free_variable (<parameter><link linkend="rasqal-variable"><type>rasqal_variable</type></link> *v</parameter>);</programlisting>
<para>Destructor - Destroy a Rasqal variable object.</para>
<refsect3 id="rasqal-free-variable.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>v</para></entry>
<entry role="parameter_description"><para><link linkend="rasqal-variable"><type>rasqal_variable</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="rasqal-variable-print" role="function">
<title>rasqal_variable_print&#160;()</title>
<indexterm zone="rasqal-variable-print"><primary>rasqal_variable_print</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
rasqal_variable_print (<parameter><link linkend="rasqal-variable"><type>rasqal_variable</type></link> *v</parameter>,
                       <parameter><link linkend="FILE:CAPS"><type>FILE</type></link> *fh</parameter>);</programlisting>
<para>Print a Rasqal variable in a debug format.</para>
<para>The print debug format may change in any release.</para>
<refsect3 id="rasqal-variable-print.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>v</para></entry>
<entry role="parameter_description"><para>the <link linkend="rasqal-variable"><type>rasqal_variable</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>fh</para></entry>
<entry role="parameter_description"><para>the FILE* handle to print to</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="rasqal-variable-print.returns" role="returns">
<title>Returns</title>
<para> non-0 on failure</para>
</refsect3></refsect2>
<refsect2 id="rasqal-variable-set-value" role="function">
<title>rasqal_variable_set_value&#160;()</title>
<indexterm zone="rasqal-variable-set-value"><primary>rasqal_variable_set_value</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
rasqal_variable_set_value (<parameter><link linkend="rasqal-variable"><type>rasqal_variable</type></link> *v</parameter>,
                           <parameter><link linkend="rasqal-literal"><type>rasqal_literal</type></link> *l</parameter>);</programlisting>
<para>Set the value of a Rasqal variable.</para>
<para>The variable value is an input parameter and is copied in, not shared.
If the variable value is NULL, any existing value is deleted.</para>
<refsect3 id="rasqal-variable-set-value.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>v</para></entry>
<entry role="parameter_description"><para>the <link linkend="rasqal-variable"><type>rasqal_variable</type></link> object</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>l</para></entry>
<entry role="parameter_description"><para>the <link linkend="rasqal-literal"><type>rasqal_literal</type></link> value to set (or NULL)</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="rasqal-section-variable.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="rasqal-variable" role="struct">
<title>rasqal_variable</title>
<indexterm zone="rasqal-variable"><primary>rasqal_variable</primary></indexterm>
<programlisting language="C">typedef struct {
  rasqal_variables_table* vars_table;
  const char * name;
  rasqal_literal* value;
  int offset;
  rasqal_variable_type type;
  struct rasqal_expression_s* expression;
  void *user_data;
  int usage;
} rasqal_variable;
</programlisting>
<para>Binding between a variable name and a value.</para>
<para>Includes internal field <parameter>offset</parameter>
 for recording the offset into the
(internal) rasqal_query variables array.</para>
<refsect3 id="rasqal-variable.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="rasqal-variables-table"><type>rasqal_variables_table</type></link>&#160;*<structfield id="rasqal-variable.vars-table">vars_table</structfield>;</para></entry>
<entry role="struct_member_description"><para>variables table that owns this variable</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para>const&#160;<link linkend="char"><type>char</type></link>&#160;*<structfield id="rasqal-variable.name">name</structfield>;</para></entry>
<entry role="struct_member_description"><para>Variable name.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="rasqal-literal"><type>rasqal_literal</type></link>&#160;*<structfield id="rasqal-variable.value">value</structfield>;</para></entry>
<entry role="struct_member_description"><para>Variable value or NULL if unbound.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="int"><type>int</type></link>&#160;<structfield id="rasqal-variable.offset">offset</structfield>;</para></entry>
<entry role="struct_member_description"><para>Internal.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="rasqal-variable-type"><type>rasqal_variable_type</type></link>&#160;<structfield id="rasqal-variable.type">type</structfield>;</para></entry>
<entry role="struct_member_description"><para>Variable type.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para>struct&#160;<link linkend="rasqal-expression-s"><type>rasqal_expression_s</type></link>&#160;*<structfield id="rasqal-variable.expression">expression</structfield>;</para></entry>
<entry role="struct_member_description"><para>Expression when the variable is a computed SELECT expression </para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="void"><type>void</type></link>&#160;*<structfield id="rasqal-variable.user-data">user_data</structfield>;</para></entry>
<entry role="struct_member_description"><para>Pointer to user data associated with a variable.  This is not used by rasqal.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="int"><type>int</type></link>&#160;<structfield id="rasqal-variable.usage">usage</structfield>;</para></entry>
<entry role="struct_member_description"><para>reference count</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>
<refsect2 id="rasqal-variable-type" role="enum">
<title>enum rasqal_variable_type</title>
<indexterm zone="rasqal-variable-type"><primary>rasqal_variable_type</primary></indexterm>
<para>Rasqal variable types.</para>
<para>ANONYMOUS can be used in queries but cannot be returned in a
result.</para>
<refsect3 id="rasqal-variable-type.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="RASQAL-VARIABLE-TYPE-UNKNOWN:CAPS">RASQAL_VARIABLE_TYPE_UNKNOWN</para></entry>
<entry role="enum_member_description"><para>Internal.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="RASQAL-VARIABLE-TYPE-NORMAL:CAPS">RASQAL_VARIABLE_TYPE_NORMAL</para></entry>
<entry role="enum_member_description"><para>The regular variable type.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="RASQAL-VARIABLE-TYPE-ANONYMOUS:CAPS">RASQAL_VARIABLE_TYPE_ANONYMOUS</para></entry>
<entry role="enum_member_description"><para>Anonymous variable type.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>

</refentry>
