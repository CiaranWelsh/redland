<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" 
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="rasqal-section-triple">
<refmeta>
<refentrytitle role="top_of_page" id="rasqal-section-triple.top_of_page">section-triple</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>RASQAL Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>section-triple</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsect1 id="rasqal-section-triple.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="rasqal-triple"><returnvalue>rasqal_triple</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="rasqal-new-triple">rasqal_new_triple</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="rasqal-triple"><returnvalue>rasqal_triple</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="rasqal-new-triple-from-triple">rasqal_new_triple_from_triple</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="rasqal-free-triple">rasqal_free_triple</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="rasqal-literal"><returnvalue>rasqal_literal</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="rasqal-triple-get-origin">rasqal_triple_get_origin</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="rasqal-triple-print">rasqal_triple_print</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="rasqal-triple-set-origin">rasqal_triple_set_origin</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="rasqal-section-triple.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="rasqal-triple">rasqal_triple</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="rasqal-triple-parts">rasqal_triple_parts</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="rasqal-section-triple.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="rasqal-section-triple.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="rasqal-new-triple" role="function">
<title>rasqal_new_triple&#160;()</title>
<indexterm zone="rasqal-new-triple"><primary>rasqal_new_triple</primary></indexterm>
<programlisting language="C"><link linkend="rasqal-triple"><returnvalue>rasqal_triple</returnvalue></link>&#160;*
rasqal_new_triple (<parameter><link linkend="rasqal-literal"><type>rasqal_literal</type></link> *subject</parameter>,
                   <parameter><link linkend="rasqal-literal"><type>rasqal_literal</type></link> *predicate</parameter>,
                   <parameter><link linkend="rasqal-literal"><type>rasqal_literal</type></link> *object</parameter>);</programlisting>
<para>Constructor - create a new <link linkend="rasqal-triple"><type>rasqal_triple</type></link> triple or triple pattern.
Takes ownership of the literals passed in.</para>
<para>The triple origin can be set with <link linkend="rasqal-triple-set-origin"><function>rasqal_triple_set_origin()</function></link>.</para>
<refsect3 id="rasqal-new-triple.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>subject</para></entry>
<entry role="parameter_description"><para>Triple subject.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>predicate</para></entry>
<entry role="parameter_description"><para>Triple predicate.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>Triple object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="rasqal-new-triple.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="rasqal-triple"><type>rasqal_triple</type></link> or NULL on failure.</para>
</refsect3></refsect2>
<refsect2 id="rasqal-new-triple-from-triple" role="function">
<title>rasqal_new_triple_from_triple&#160;()</title>
<indexterm zone="rasqal-new-triple-from-triple"><primary>rasqal_new_triple_from_triple</primary></indexterm>
<programlisting language="C"><link linkend="rasqal-triple"><returnvalue>rasqal_triple</returnvalue></link>&#160;*
rasqal_new_triple_from_triple (<parameter><link linkend="rasqal-triple"><type>rasqal_triple</type></link> *t</parameter>);</programlisting>
<para>Copy constructor - create a new <link linkend="rasqal-triple"><type>rasqal_triple</type></link> from an existing one.</para>
<refsect3 id="rasqal-new-triple-from-triple.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>t</para></entry>
<entry role="parameter_description"><para>Triple to copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="rasqal-new-triple-from-triple.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="rasqal-triple"><type>rasqal_triple</type></link> or NULL on failure.</para>
</refsect3></refsect2>
<refsect2 id="rasqal-free-triple" role="function">
<title>rasqal_free_triple&#160;()</title>
<indexterm zone="rasqal-free-triple"><primary>rasqal_free_triple</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
rasqal_free_triple (<parameter><link linkend="rasqal-triple"><type>rasqal_triple</type></link> *t</parameter>);</programlisting>
<para>Destructor - destroy a <link linkend="rasqal-triple"><type>rasqal_triple</type></link> object.</para>
<refsect3 id="rasqal-free-triple.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>t</para></entry>
<entry role="parameter_description"><para><link linkend="rasqal-triple"><type>rasqal_triple</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="rasqal-triple-get-origin" role="function">
<title>rasqal_triple_get_origin&#160;()</title>
<indexterm zone="rasqal-triple-get-origin"><primary>rasqal_triple_get_origin</primary></indexterm>
<programlisting language="C"><link linkend="rasqal-literal"><returnvalue>rasqal_literal</returnvalue></link>&#160;*
rasqal_triple_get_origin (<parameter><link linkend="rasqal-triple"><type>rasqal_triple</type></link> *t</parameter>);</programlisting>
<para>Get the origin field of a <link linkend="rasqal-triple"><type>rasqal_triple</type></link>.</para>
<refsect3 id="rasqal-triple-get-origin.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>t</para></entry>
<entry role="parameter_description"><para>The triple object. </para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="rasqal-triple-get-origin.returns" role="returns">
<title>Returns</title>
<para> The triple origin or NULL.</para>
</refsect3></refsect2>
<refsect2 id="rasqal-triple-print" role="function">
<title>rasqal_triple_print&#160;()</title>
<indexterm zone="rasqal-triple-print"><primary>rasqal_triple_print</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
rasqal_triple_print (<parameter><link linkend="rasqal-triple"><type>rasqal_triple</type></link> *t</parameter>,
                     <parameter><link linkend="FILE:CAPS"><type>FILE</type></link> *fh</parameter>);</programlisting>
<para>Print a Rasqal triple in a debug format.</para>
<para>The print debug format may change in any release.</para>
<refsect3 id="rasqal-triple-print.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>t</para></entry>
<entry role="parameter_description"><para><link linkend="rasqal-triple"><type>rasqal_triple</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>fh</para></entry>
<entry role="parameter_description"><para>The FILE* handle to print to.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="rasqal-triple-print.returns" role="returns">
<title>Returns</title>
<para> non-0 on failure</para>
</refsect3></refsect2>
<refsect2 id="rasqal-triple-set-origin" role="function">
<title>rasqal_triple_set_origin&#160;()</title>
<indexterm zone="rasqal-triple-set-origin"><primary>rasqal_triple_set_origin</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
rasqal_triple_set_origin (<parameter><link linkend="rasqal-triple"><type>rasqal_triple</type></link> *t</parameter>,
                          <parameter><link linkend="rasqal-literal"><type>rasqal_literal</type></link> *l</parameter>);</programlisting>
<para>Set the origin field of a <link linkend="rasqal-triple"><type>rasqal_triple</type></link>.</para>
<refsect3 id="rasqal-triple-set-origin.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>t</para></entry>
<entry role="parameter_description"><para>The triple object. </para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>l</para></entry>
<entry role="parameter_description"><para>The <link linkend="rasqal-literal"><type>rasqal_literal</type></link> object to set as origin.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="rasqal-section-triple.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="rasqal-triple" role="struct">
<title>rasqal_triple</title>
<indexterm zone="rasqal-triple"><primary>rasqal_triple</primary></indexterm>
<programlisting language="C">typedef struct {
  rasqal_literal* subject;
  rasqal_literal* predicate;
  rasqal_literal* object;
  rasqal_literal* origin;
  unsigned int flags;
} rasqal_triple;
</programlisting>
<para>A triple pattern or RDF triple.</para>
<para>This is used as a triple pattern in queries and
an RDF triple when generating RDF triples such as with SPARQL CONSTRUCT.</para>
<refsect3 id="rasqal-triple.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="rasqal-literal"><type>rasqal_literal</type></link>&#160;*<structfield id="rasqal-triple.subject">subject</structfield>;</para></entry>
<entry role="struct_member_description"><para>Triple subject.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="rasqal-literal"><type>rasqal_literal</type></link>&#160;*<structfield id="rasqal-triple.predicate">predicate</structfield>;</para></entry>
<entry role="struct_member_description"><para>Triple predicate.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="rasqal-literal"><type>rasqal_literal</type></link>&#160;*<structfield id="rasqal-triple.object">object</structfield>;</para></entry>
<entry role="struct_member_description"><para>Triple object.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="rasqal-literal"><type>rasqal_literal</type></link>&#160;*<structfield id="rasqal-triple.origin">origin</structfield>;</para></entry>
<entry role="struct_member_description"><para>Triple origin.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para>unsigned&#160;<link linkend="int"><type>int</type></link>&#160;<structfield id="rasqal-triple.flags">flags</structfield>;</para></entry>
<entry role="struct_member_description"><para>Or of enum <link linkend="rasqal-triple-flags"><type>rasqal_triple_flags</type></link> bits.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>
<refsect2 id="rasqal-triple-parts" role="enum">
<title>enum rasqal_triple_parts</title>
<indexterm zone="rasqal-triple-parts"><primary>rasqal_triple_parts</primary></indexterm>
<para>Flags for parts of a triple.</para>
<refsect3 id="rasqal-triple-parts.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="RASQAL-TRIPLE-NONE:CAPS">RASQAL_TRIPLE_NONE</para></entry>
<entry role="enum_member_description"><para>no parts</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="RASQAL-TRIPLE-SUBJECT:CAPS">RASQAL_TRIPLE_SUBJECT</para></entry>
<entry role="enum_member_description"><para>Subject present in a triple.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="RASQAL-TRIPLE-PREDICATE:CAPS">RASQAL_TRIPLE_PREDICATE</para></entry>
<entry role="enum_member_description"><para>Predicate present in a triple.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="RASQAL-TRIPLE-OBJECT:CAPS">RASQAL_TRIPLE_OBJECT</para></entry>
<entry role="enum_member_description"><para>Object present in a triple.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="RASQAL-TRIPLE-ORIGIN:CAPS">RASQAL_TRIPLE_ORIGIN</para></entry>
<entry role="enum_member_description"><para>Origin/graph present in a triple.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="RASQAL-TRIPLE-GRAPH:CAPS">RASQAL_TRIPLE_GRAPH</para></entry>
<entry role="enum_member_description"><para>Alias for RASQAL_TRIPLE_ORIGIN</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="RASQAL-TRIPLE-SPO:CAPS">RASQAL_TRIPLE_SPO</para></entry>
<entry role="enum_member_description"><para>Subject, Predicate and Object present in a triple.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="RASQAL-TRIPLE-SPOG:CAPS">RASQAL_TRIPLE_SPOG</para></entry>
<entry role="enum_member_description"><para>Subject, Predicate, Object, Graph present in a triple.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>

</refentry>
